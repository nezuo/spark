[{"title":"Devices","type":0,"sectionRef":"#","url":"api/Devices","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Devices","url":"api/Devices#properties","content":" "},{"title":"Keyboard​","type":1,"pageTitle":"Devices","url":"api/Devices#Keyboard","content":"&lt;/&gt; Devices.Keyboard: Keyboard   "},{"title":"Mouse​","type":1,"pageTitle":"Devices","url":"api/Devices#Mouse","content":"&lt;/&gt; Devices.Mouse: Mouse   "},{"title":"Gamepad​","type":1,"pageTitle":"Devices","url":"api/Devices#Gamepad","content":"&lt;/&gt; Devices.Gamepad: Gamepad  "},{"title":"Keyboard","type":0,"sectionRef":"#","url":"api/Keyboard","content":"On this page Keyboard Exports a ButtonControl for KeyCode 2 to 140. For example, Keyboard.Space.","keywords":""},{"title":"Actions","type":0,"sectionRef":"#","url":"api/Actions","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Actions","url":"api/Actions#properties","content":" "},{"title":"bindings​","type":1,"pageTitle":"Actions","url":"api/Actions#bindings","content":"&lt;/&gt; Actions.bindings: Bindings  "},{"title":"Functions​","type":1,"pageTitle":"Actions","url":"api/Actions#functions","content":" "},{"title":"createAction​","type":1,"pageTitle":"Actions","url":"api/Actions#createAction","content":"&lt;/&gt; Actions:createAction( name: string, actionKind: ActionKind ) → Actions-- Returns itself Creates a new Action with the actionKind and returns itself. Actions.new() :createAction(&quot;button&quot;, ActionKind.Button) :createAction(&quot;axis1d&quot;, ActionKind.Axis1d) :createAction(&quot;axis2d&quot;, ActionKind.Axis2d)   "},{"title":"get​","type":1,"pageTitle":"Actions","url":"api/Actions#get","content":"&lt;/&gt; Actions:get(name: string) → Action? Returns the Action corresponding to the name. "},{"title":"Action","type":0,"sectionRef":"#","url":"api/Action","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Action","url":"api/Action#functions","content":" "},{"title":"get​","type":1,"pageTitle":"Action","url":"api/Action#get","content":"&lt;/&gt; Action:get() → boolean | number | Vector2  Returns the value of the action.  "},{"title":"subscribe​","type":1,"pageTitle":"Action","url":"api/Action#subscribe","content":"&lt;/&gt; Action:subscribe(subscriber: (...: any) → ...any | thread) → () → ()-- Unsubscribes the subscriber The subscriber is notified when the action's value changes. local unsubscribe = action:subscribe(function(value) print(&quot;Updated value:&quot;, value) end)  "},{"title":"Composite1d","type":0,"sectionRef":"#","url":"api/Composite1d","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#properties","content":" "},{"title":"positive​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#positive","content":"&lt;/&gt; Composite1d.positive: ButtonControl   "},{"title":"negative​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#negative","content":"&lt;/&gt; Composite1d.negative: ButtonControl  "},{"title":"Functions​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#new","content":"&lt;/&gt; Composite1d.new(options: Composite1dOptions) → Composite1d "},{"title":"Types","type":1,"pageTitle":"Composite1d","url":"api/Composite1d##","content":""},{"title":"​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#Composite1dOptions","content":"interface Composite1dOptions { positive: ButtonControl negative: ButtonControl }  Creates a new Composite1d. Composite1d.new({ positive = Keyboard.W, negative = Keyboard.S, })  "},{"title":"Composite2d","type":0,"sectionRef":"#","url":"api/Composite2d","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#properties","content":" "},{"title":"up​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#up","content":"&lt;/&gt; Composite2d.up: ButtonControl   "},{"title":"down​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#down","content":"&lt;/&gt; Composite2d.down: ButtonControl   "},{"title":"left​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#left","content":"&lt;/&gt; Composite2d.left: ButtonControl   "},{"title":"right​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#right","content":"&lt;/&gt; Composite2d.right: ButtonControl  "},{"title":"Functions​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#new","content":"&lt;/&gt; Composite2d.new(options: Composite2dOptions) → Composite2d "},{"title":"Types","type":1,"pageTitle":"Composite2d","url":"api/Composite2d##","content":""},{"title":"​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#Composite2dOptions","content":"interface Composite2dOptions { up: ButtonControl down: ButtonControl left: ButtonControl right: ButtonControl }  Creates a new Composite2d. Composite2d.new({ up = Keyboard.W, down = Keyboard.S, left = Keyboard.A, right = Keyboard.D, })  "},{"title":"InputState","type":0,"sectionRef":"#","url":"api/InputState","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputState","url":"api/InputState#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputState","url":"api/InputState#new","content":"&lt;/&gt; InputState.new() → InputState Create a new InputState.  "},{"title":"addActions​","type":1,"pageTitle":"InputState","url":"api/InputState#addActions","content":"&lt;/&gt; InputState:addActions(actions: Actions) → () Actions added to the InputState will be updated when InputState:update is called.  "},{"title":"update​","type":1,"pageTitle":"InputState","url":"api/InputState#update","content":"&lt;/&gt; InputState:update() → () Updates all actions added to the InputState. After updating the actions, it will also reset controls like Mouse.Delta. "},{"title":"Mouse","type":0,"sectionRef":"#","url":"api/Mouse","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Mouse","url":"api/Mouse#properties","content":" "},{"title":"LeftButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#LeftButton","content":"&lt;/&gt; Mouse.LeftButton: ButtonControl   "},{"title":"RightButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#RightButton","content":"&lt;/&gt; Mouse.RightButton: ButtonControl   "},{"title":"MiddleButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#MiddleButton","content":"&lt;/&gt; Mouse.MiddleButton: ButtonControl   "},{"title":"ScrollWheel​","type":1,"pageTitle":"Mouse","url":"api/Mouse#ScrollWheel","content":"&lt;/&gt; Mouse.ScrollWheel: Axis1dControl   "},{"title":"Delta​","type":1,"pageTitle":"Mouse","url":"api/Mouse#Delta","content":"&lt;/&gt; Mouse.Delta: Axis2dControl  "},{"title":"Gamepad","type":0,"sectionRef":"#","url":"api/Gamepad","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#properties","content":" "},{"title":"North​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#North","content":"&lt;/&gt; Gamepad.North: ButtonControl   "},{"title":"West​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#West","content":"&lt;/&gt; Gamepad.West: ButtonControl   "},{"title":"South​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#South","content":"&lt;/&gt; Gamepad.South: ButtonControl   "},{"title":"East​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#East","content":"&lt;/&gt; Gamepad.East: ButtonControl   "},{"title":"Start​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#Start","content":"&lt;/&gt; Gamepad.Start: ButtonControl   "},{"title":"Select​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#Select","content":"&lt;/&gt; Gamepad.Select: ButtonControl   "},{"title":"DPadUp​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadUp","content":"&lt;/&gt; Gamepad.DPadUp: ButtonControl   "},{"title":"DPadDown​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadDown","content":"&lt;/&gt; Gamepad.DPadDown: ButtonControl   "},{"title":"DPadLeft​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadLeft","content":"&lt;/&gt; Gamepad.DPadLeft: ButtonControl   "},{"title":"DPadRight​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadRight","content":"&lt;/&gt; Gamepad.DPadRight: ButtonControl   "},{"title":"LeftBumper​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftBumper","content":"&lt;/&gt; Gamepad.LeftBumper: ButtonControl   "},{"title":"LeftTrigger​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftTrigger","content":"&lt;/&gt; Gamepad.LeftTrigger: ButtonControl   "},{"title":"LeftThumb​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftThumb","content":"&lt;/&gt; Gamepad.LeftThumb: ButtonControl   "},{"title":"RightBumper​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightBumper","content":"&lt;/&gt; Gamepad.RightBumper: ButtonControl   "},{"title":"RightTrigger​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightTrigger","content":"&lt;/&gt; Gamepad.RightTrigger: ButtonControl   "},{"title":"RightThumb​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightThumb","content":"&lt;/&gt; Gamepad.RightThumb: ButtonControl   "},{"title":"LeftThumbstick​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftThumbstick","content":"&lt;/&gt; Gamepad.LeftThumbstick: Axis2dControl   "},{"title":"RightThumbstick​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightThumbstick","content":"&lt;/&gt; Gamepad.RightThumbstick: Axis2dControl  "},{"title":"Bindings","type":0,"sectionRef":"#","url":"api/Bindings","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Bindings","url":"api/Bindings#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Bindings","url":"api/Bindings#new","content":"&lt;/&gt; Bindings.new(actions: Actions) → Bindings Creates a new empty Bindings.  "},{"title":"fromSerialized​","type":1,"pageTitle":"Bindings","url":"api/Bindings#fromSerialized","content":"&lt;/&gt; Bindings.fromSerialized( actions: Actions, serialized: {}-- Serialized bindings returned from Bindings:serialize. ) → Bindings Creates a new Bindings with the serialized bindings.  "},{"title":"bind​","type":1,"pageTitle":"Bindings","url":"api/Bindings#bind","content":"&lt;/&gt; Bindings:bind( name: string,-- The name of the action. control: Control,-- The control that gets mapped to the action. group: string?-- The name of the group the binding belongs to. This is useful for rebinding controls in a specific group. ) → Bindings-- Returns itself "},{"title":"Types","type":1,"pageTitle":"Bindings","url":"api/Bindings##","content":""},{"title":"​","type":1,"pageTitle":"Bindings","url":"api/Bindings#Control","content":"type Control = ButtonControl | Axis1dControl | Axis2dControl | Composite1d | Composite2d  Adds the control to the action's bindings. "},{"title":"Errors","type":1,"pageTitle":"Bindings","url":"api/Bindings##","content":"Type\tDescription&quot;Action 'name' does not exist&quot;\tThrown when the action does not exist. &quot;Cannot use control with ActionKind.&quot;\tThrown when the control cannot be used with the action's ActionKind.  "},{"title":"filter​","type":1,"pageTitle":"Bindings","url":"api/Bindings#filter","content":"&lt;/&gt; Bindings:filter( name: string,-- The name of the action. predicate: (string) → boolean-- A function that takes the binding's group and returns false if the binding should be removed. ) → () -- Remove all bindings with the group &quot;Controller&quot;. bindings:filter(&quot;Move&quot;, function(group) return group ~= &quot;Controller&quot; end)   "},{"title":"forEachComposite​","type":1,"pageTitle":"Bindings","url":"api/Bindings#forEachComposite","content":"&lt;/&gt; Bindings:forEachComposite( name: string,-- The name of the action. forEach: ( Composite1d | Composite2d, string ) → ()-- A function that takes the composite and its group. ) → () Iterates over every composite in an action's bindings. -- Change the `up` control of composites with group &quot;Keyboard1&quot;. bindings:forEachComposite(&quot;Move&quot;, function(composite, group) if group == &quot;Keyboard1&quot; then composite.up = Devices.Keyboard.W end end)   "},{"title":"serialize​","type":1,"pageTitle":"Bindings","url":"api/Bindings#serialize","content":"&lt;/&gt; Bindings:serialize() → {} Returns a serialized version of the bindings for saving. "},{"title":"Rebind","type":0,"sectionRef":"#","url":"api/Rebind","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Rebind","url":"api/Rebind#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Rebind","url":"api/Rebind#new","content":"&lt;/&gt; Rebind.new( valueKind: ValueKind-- Rebind returns controls that are valueKind. ) → Rebind Creates a new Rebind.  "},{"title":"withoutControls​","type":1,"pageTitle":"Rebind","url":"api/Rebind#withoutControls","content":"&lt;/&gt; Rebind:withoutControls(controls: {Control}) → Rebind "},{"title":"Types","type":1,"pageTitle":"Rebind","url":"api/Rebind##","content":""},{"title":"​","type":1,"pageTitle":"Rebind","url":"api/Rebind#Control","content":"type Control = ButtonControl | Axis1dControl | Axis2dControl | Composite1d | Composite2d  Excludes all controls.  "},{"title":"withDevices​","type":1,"pageTitle":"Rebind","url":"api/Rebind#withDevices","content":"&lt;/&gt; Rebind:withDevices(devices: {Device}) → Rebind "},{"title":"Types","type":1,"pageTitle":"Rebind","url":"api/Rebind##","content":""},{"title":"​","type":1,"pageTitle":"Rebind","url":"api/Rebind#Device","content":"type Device = {[string]: Control}  Uses controls from the devices.  "},{"title":"start​","type":1,"pageTitle":"Rebind","url":"api/Rebind#start","content":"&lt;/&gt; Rebind:start() → Promise Returns a promise that resolves with a Control that matches the query. The promise will reject if there are no controls that match the query. "},{"title":"Spark","type":0,"sectionRef":"#","url":"api/Spark","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Spark","url":"api/Spark#types","content":" "},{"title":"ActionKind​","type":1,"pageTitle":"Spark","url":"api/Spark#ActionKind","content":"&lt;/&gt; interface ActionKind { Axis1d: &quot;Axis1d&quot;-- Action returns a number. Axis2d: &quot;Axis2d&quot;-- Action returns a Vector2. Button: &quot;Button&quot; -- Action returns a boolean. } An enumeration that represents what type of value an Action returns.  "},{"title":"ValueKind​","type":1,"pageTitle":"Spark","url":"api/Spark#ValueKind","content":"&lt;/&gt; interface ValueKind { Boolean: &quot;Boolean&quot;-- Control returns a boolean. Number: &quot;Number&quot;-- Control returns a number. Vector2: &quot;Vector2&quot; -- Control returns a Vector2. } An enumeration that represents the type of value a Control returns. "},{"title":"Properties​","type":1,"pageTitle":"Spark","url":"api/Spark#properties","content":" "},{"title":"InputState​","type":1,"pageTitle":"Spark","url":"api/Spark#InputState","content":"&lt;/&gt; Spark.InputState: InputState   "},{"title":"Actions​","type":1,"pageTitle":"Spark","url":"api/Spark#Actions","content":"&lt;/&gt; Spark.Actions: Actions   "},{"title":"Bindings​","type":1,"pageTitle":"Spark","url":"api/Spark#Bindings","content":"&lt;/&gt; Spark.Bindings: Bindings   "},{"title":"Rebind​","type":1,"pageTitle":"Spark","url":"api/Spark#Rebind","content":"&lt;/&gt; Spark.Rebind: Rebind   "},{"title":"Devices​","type":1,"pageTitle":"Spark","url":"api/Spark#Devices","content":"&lt;/&gt; Spark.Devices: Devices   "},{"title":"Composite1d​","type":1,"pageTitle":"Spark","url":"api/Spark#Composite1d","content":"&lt;/&gt; Spark.Composite1d: Composite1d   "},{"title":"Composite2d​","type":1,"pageTitle":"Spark","url":"api/Spark#Composite2d","content":"&lt;/&gt; Spark.Composite2d: Composite2d  "}]