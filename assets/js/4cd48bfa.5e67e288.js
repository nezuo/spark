"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[50],{95517:e=>{e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new `Rebind`. To query for a button, call [Rebind:start].","params":[],"returns":[{"desc":"","lua_type":"Rebind"}],"function_type":"static","source":{"line":35,"path":"src/Rebind.lua"}},{"name":"withDevices","desc":"By default, inputs from all devices are included. When called, this method will only include the specified `devices`.","params":[{"name":"devices","desc":"","lua_type":"{ Device }"}],"returns":[{"desc":"Returns self","lua_type":"Rebind"}],"function_type":"method","source":{"line":48,"path":"src/Rebind.lua"}},{"name":"withoutInputs","desc":"Excludes `inputs` from being chosen.","params":[{"name":"inputs","desc":"","lua_type":"{ Button }"}],"returns":[{"desc":"Returns self","lua_type":"Rebind"}],"function_type":"method","source":{"line":62,"path":"src/Rebind.lua"}},{"name":"start","desc":"Returns a [Promise](https://eryn.io/roblox-lua-promise/api/Promise) that resolves with the first [Button] the user presses.\\n\\nThe promise can be cancelled if you no longer need the result.","params":[],"returns":[{"desc":"","lua_type":"Promise<Button>"}],"function_type":"method","source":{"line":77,"path":"src/Rebind.lua"}}],"properties":[],"types":[{"name":"Device","desc":"","lua_type":"\\"Keyboard\\" | \\"Mouse\\" | \\"Gamepad\\"","source":{"line":11,"path":"src/Rebind.lua"}}],"name":"Rebind","desc":"Queries for the first button a user presses. This is useful for rebinding based on user input.\\n\\n```lua\\nRebind.new()\\n\\t:withDevices({ \\"Keyboard\\", \\"Mouse\\" })\\n\\t:withoutInputs({ Enum.KeyCode.Escape })\\n\\t:start()\\n\\t:andThen(function(button)\\n\\t\\tprint(\\"User pressed\\", button)\\n\\tend)\\n```","source":{"line":27,"path":"src/Rebind.lua"}}')}}]);