"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[295],{31534:function(t){t.exports=JSON.parse('{"functions":[{"name":"new","desc":"Create a new InputState.","params":[],"returns":[{"desc":"","lua_type":"InputState"}],"function_type":"static","source":{"line":60,"path":"src/InputState.lua"}},{"name":"addActions","desc":"Actions added to the InputState will be updated when [`InputState:update`](/api/InputState#update) is called.","params":[{"name":"actions","desc":"","lua_type":"Actions"}],"returns":[],"function_type":"method","source":{"line":109,"path":"src/InputState.lua"}},{"name":"update","desc":"Updates all actions added to the InputState.\\n\\nAfter updating the actions, it will also reset controls like [Mouse.Delta](/api/Mouse#Delta).","params":[],"returns":[],"function_type":"method","source":{"line":118,"path":"src/InputState.lua"}}],"properties":[],"types":[],"name":"InputState","desc":"An InputState updates all controls and actions.\\n\\n:::warning\\nYou should only create one InputState.\\n:::","source":{"line":52,"path":"src/InputState.lua"}}')}}]);