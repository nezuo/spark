"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[202],{88822:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Creates a new Rebind.","params":[{"name":"valueKind","desc":"Rebind returns inputs that are `valueKind`.","lua_type":"ValueKind"}],"returns":[{"desc":"","lua_type":"Rebind"}],"function_type":"static","source":{"line":32,"path":"src/Rebind.lua"}},{"name":"withoutInputs","desc":"Excludes all `inputs`.","params":[{"name":"inputs","desc":"","lua_type":"{ Input }"}],"returns":[{"desc":"","lua_type":"Rebind"}],"function_type":"method","source":{"line":46,"path":"src/Rebind.lua"}},{"name":"withDevices","desc":"Uses inputs from the `devices`.","params":[{"name":"devices","desc":"","lua_type":"{ Device }"}],"returns":[{"desc":"","lua_type":"Rebind"}],"function_type":"method","source":{"line":60,"path":"src/Rebind.lua"}},{"name":"start","desc":"Returns a promise that resolves with an [`Input`](/api/Input) that matches the query.\\n\\nThe promise will reject if there are no inputs that match the query.","params":[],"returns":[{"desc":"","lua_type":"Promise"}],"function_type":"method","source":{"line":75,"path":"src/Rebind.lua"}}],"properties":[],"types":[],"name":"Rebind","desc":"A Rebind is used for getting an input the user actuates.\\n\\nYou can create a query with specific devices and inputs and then call [`Rebind:start`](/api/Rebind/start) to get a promise that\\nresolves with the first input matching the query that the user actuates.\\n\\n```lua\\nlocal input = Rebind.new(ValueKind.Boolean)\\n\\t:withDevices({ Devices.Keyboard })\\n\\t:withoutInputs({ Devices.Keyboard.Space })\\n\\t:start()\\n\\t:expect()\\n```","source":{"line":23,"path":"src/Rebind.lua"}}')}}]);