[{"title":"Keyboard","type":0,"sectionRef":"#","url":"api/Keyboard","content":"On this page Keyboard Exports a ButtonInput for KeyCode 2 to 140. For example, Keyboard.Space.","keywords":""},{"title":"Devices","type":0,"sectionRef":"#","url":"api/Devices","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Devices","url":"api/Devices#properties","content":" "},{"title":"Keyboard​","type":1,"pageTitle":"Devices","url":"api/Devices#Keyboard","content":"&lt;/&gt; Devices.Keyboard: Keyboard   "},{"title":"Mouse​","type":1,"pageTitle":"Devices","url":"api/Devices#Mouse","content":"&lt;/&gt; Devices.Mouse: Mouse   "},{"title":"Gamepad​","type":1,"pageTitle":"Devices","url":"api/Devices#Gamepad","content":"&lt;/&gt; Devices.Gamepad: Gamepad  "},{"title":"Action","type":0,"sectionRef":"#","url":"api/Action","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Action","url":"api/Action#functions","content":" "},{"title":"get​","type":1,"pageTitle":"Action","url":"api/Action#get","content":"&lt;/&gt; Action:get() → boolean | number | Vector2  Returns the value of the action.  "},{"title":"subscribe​","type":1,"pageTitle":"Action","url":"api/Action#subscribe","content":"&lt;/&gt; Action:subscribe(subscriber: (...: any) → ...any | thread) → () → ()-- Unsubscribes the subscriber The subscriber is notified when the action's value changes. local unsubscribe = action:subscribe(function(value) print(&quot;Updated value:&quot;, value) end)  "},{"title":"Mouse","type":0,"sectionRef":"#","url":"api/Mouse","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Mouse","url":"api/Mouse#properties","content":" "},{"title":"LeftButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#LeftButton","content":"&lt;/&gt; Mouse.LeftButton: ButtonInput   "},{"title":"RightButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#RightButton","content":"&lt;/&gt; Mouse.RightButton: ButtonInput   "},{"title":"MiddleButton​","type":1,"pageTitle":"Mouse","url":"api/Mouse#MiddleButton","content":"&lt;/&gt; Mouse.MiddleButton: ButtonInput   "},{"title":"ScrollWheel​","type":1,"pageTitle":"Mouse","url":"api/Mouse#ScrollWheel","content":"&lt;/&gt; Mouse.ScrollWheel: Axis1dInput   "},{"title":"Delta​","type":1,"pageTitle":"Mouse","url":"api/Mouse#Delta","content":"&lt;/&gt; Mouse.Delta: Axis2dInput  "},{"title":"Composite1d","type":0,"sectionRef":"#","url":"api/Composite1d","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#properties","content":" "},{"title":"positive​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#positive","content":"&lt;/&gt; Composite1d.positive: ButtonInput?   "},{"title":"negative​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#negative","content":"&lt;/&gt; Composite1d.negative: ButtonInput?  "},{"title":"Functions​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#new","content":"&lt;/&gt; Composite1d.new(options: Composite1dOptions) → Composite1d "},{"title":"Types","type":1,"pageTitle":"Composite1d","url":"api/Composite1d##","content":""},{"title":"​","type":1,"pageTitle":"Composite1d","url":"api/Composite1d#Composite1dOptions","content":"interface Composite1dOptions { positive: ButtonInput? negative: ButtonInput? }  Creates a new Composite1d. Composite1d.new({ positive = Keyboard.W, negative = Keyboard.S, })  "},{"title":"Actions","type":0,"sectionRef":"#","url":"api/Actions","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Actions","url":"api/Actions#properties","content":" "},{"title":"inputMap​","type":1,"pageTitle":"Actions","url":"api/Actions#inputMap","content":"&lt;/&gt; Actions.inputMap: InputMap  "},{"title":"Functions​","type":1,"pageTitle":"Actions","url":"api/Actions#functions","content":" "},{"title":"createAction​","type":1,"pageTitle":"Actions","url":"api/Actions#createAction","content":"&lt;/&gt; Actions:createAction( name: string, actionKind: ActionKind ) → Actions-- Returns itself. Creates a new Action with the actionKind and returns itself. Actions.new() :createAction(&quot;button&quot;, ActionKind.Button) :createAction(&quot;axis1d&quot;, ActionKind.Axis1d) :createAction(&quot;axis2d&quot;, ActionKind.Axis2d)   "},{"title":"get​","type":1,"pageTitle":"Actions","url":"api/Actions#get","content":"&lt;/&gt; Actions:get(name: string) → Action? Returns the Action corresponding to the name. "},{"title":"InputState","type":0,"sectionRef":"#","url":"api/InputState","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputState","url":"api/InputState#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputState","url":"api/InputState#new","content":"&lt;/&gt; InputState.new() → InputState Create a new InputState.  "},{"title":"addActions​","type":1,"pageTitle":"InputState","url":"api/InputState#addActions","content":"&lt;/&gt; InputState:addActions(actions: Actions) → () Actions added to the InputState will be updated when InputState:update is called.  "},{"title":"update​","type":1,"pageTitle":"InputState","url":"api/InputState#update","content":"&lt;/&gt; InputState:update() → () Updates all actions added to the InputState. After updating the actions, it will also reset inputs like Mouse.Delta. "},{"title":"Errors","type":1,"pageTitle":"InputState","url":"api/InputState##","content":"Type\tDescriptionInvalid action in InputMap\tThrows when an Action's InputMap contains an invalid action Invalid input in InputMap\tThrows when an Action's InputMap contains an input that does not match the corresponding action's ActionKind. "},{"title":"Composite2d","type":0,"sectionRef":"#","url":"api/Composite2d","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#properties","content":" "},{"title":"up​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#up","content":"&lt;/&gt; Composite2d.up: ButtonInput?   "},{"title":"down​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#down","content":"&lt;/&gt; Composite2d.down: ButtonInput?   "},{"title":"left​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#left","content":"&lt;/&gt; Composite2d.left: ButtonInput?   "},{"title":"right​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#right","content":"&lt;/&gt; Composite2d.right: ButtonInput?  "},{"title":"Functions​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#new","content":"&lt;/&gt; Composite2d.new(options: Composite2dOptions) → Composite2d "},{"title":"Types","type":1,"pageTitle":"Composite2d","url":"api/Composite2d##","content":""},{"title":"​","type":1,"pageTitle":"Composite2d","url":"api/Composite2d#Composite2dOptions","content":"interface Composite2dOptions { up: ButtonInput? down: ButtonInput? left: ButtonInput? right: ButtonInput? }  Creates a new Composite2d. Composite2d.new({ up = Keyboard.W, down = Keyboard.S, left = Keyboard.A, right = Keyboard.D, })  "},{"title":"Rebind","type":0,"sectionRef":"#","url":"api/Rebind","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Rebind","url":"api/Rebind#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Rebind","url":"api/Rebind#new","content":"&lt;/&gt; Rebind.new( valueKind: ValueKind-- Rebind returns inputs that are valueKind. ) → Rebind Creates a new Rebind.  "},{"title":"withoutInputs​","type":1,"pageTitle":"Rebind","url":"api/Rebind#withoutInputs","content":"&lt;/&gt; Rebind:withoutInputs(inputs: {Input}) → Rebind Excludes all inputs.  "},{"title":"withDevices​","type":1,"pageTitle":"Rebind","url":"api/Rebind#withDevices","content":"&lt;/&gt; Rebind:withDevices(devices: {Device}) → Rebind Uses inputs from the devices.  "},{"title":"start​","type":1,"pageTitle":"Rebind","url":"api/Rebind#start","content":"&lt;/&gt; Rebind:start() → Promise Returns a promise that resolves with an Input that matches the query. The promise will reject if there are no inputs that match the query. "},{"title":"Gamepad","type":0,"sectionRef":"#","url":"api/Gamepad","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#properties","content":" "},{"title":"North​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#North","content":"&lt;/&gt; Gamepad.North: ButtonInput   "},{"title":"West​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#West","content":"&lt;/&gt; Gamepad.West: ButtonInput   "},{"title":"South​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#South","content":"&lt;/&gt; Gamepad.South: ButtonInput   "},{"title":"East​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#East","content":"&lt;/&gt; Gamepad.East: ButtonInput   "},{"title":"Start​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#Start","content":"&lt;/&gt; Gamepad.Start: ButtonInput   "},{"title":"Select​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#Select","content":"&lt;/&gt; Gamepad.Select: ButtonInput   "},{"title":"DPadUp​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadUp","content":"&lt;/&gt; Gamepad.DPadUp: ButtonInput   "},{"title":"DPadDown​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadDown","content":"&lt;/&gt; Gamepad.DPadDown: ButtonInput   "},{"title":"DPadLeft​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadLeft","content":"&lt;/&gt; Gamepad.DPadLeft: ButtonInput   "},{"title":"DPadRight​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#DPadRight","content":"&lt;/&gt; Gamepad.DPadRight: ButtonInput   "},{"title":"LeftBumper​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftBumper","content":"&lt;/&gt; Gamepad.LeftBumper: ButtonInput   "},{"title":"LeftTrigger​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftTrigger","content":"&lt;/&gt; Gamepad.LeftTrigger: ButtonInput   "},{"title":"LeftThumb​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftThumb","content":"&lt;/&gt; Gamepad.LeftThumb: ButtonInput   "},{"title":"RightBumper​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightBumper","content":"&lt;/&gt; Gamepad.RightBumper: ButtonInput   "},{"title":"RightTrigger​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightTrigger","content":"&lt;/&gt; Gamepad.RightTrigger: ButtonInput   "},{"title":"RightThumb​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightThumb","content":"&lt;/&gt; Gamepad.RightThumb: ButtonInput   "},{"title":"LeftThumbstick​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#LeftThumbstick","content":"&lt;/&gt; Gamepad.LeftThumbstick: Axis2dInput   "},{"title":"RightThumbstick​","type":1,"pageTitle":"Gamepad","url":"api/Gamepad#RightThumbstick","content":"&lt;/&gt; Gamepad.RightThumbstick: Axis2dInput  "},{"title":"Spark","type":0,"sectionRef":"#","url":"api/Spark","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Spark","url":"api/Spark#types","content":" "},{"title":"ActionKind​","type":1,"pageTitle":"Spark","url":"api/Spark#ActionKind","content":"&lt;/&gt; interface ActionKind { Axis1d: &quot;Axis1d&quot;-- Action returns a number. Axis2d: &quot;Axis2d&quot;-- Action returns a Vector2. Button: &quot;Button&quot; -- Action returns a boolean. } An enumeration that represents what type of value an Action returns.  "},{"title":"Input​","type":1,"pageTitle":"Spark","url":"api/Spark#Input","content":"&lt;/&gt; type Input = ButtonInput | Axis1dInput | Axis2dInput | Composite1d | Composite2d   "},{"title":"Device​","type":1,"pageTitle":"Spark","url":"api/Spark#Device","content":"&lt;/&gt; type Device = Keyboard | Mouse | Gamepad   "},{"title":"ValueKind​","type":1,"pageTitle":"Spark","url":"api/Spark#ValueKind","content":"&lt;/&gt; interface ValueKind { Boolean: &quot;Boolean&quot; Number: &quot;Number&quot; Vector2: &quot;Vector2&quot; } An enumeration that represents the type of value an input returns. "},{"title":"Properties​","type":1,"pageTitle":"Spark","url":"api/Spark#properties","content":" "},{"title":"InputState​","type":1,"pageTitle":"Spark","url":"api/Spark#InputState","content":"&lt;/&gt; Spark.InputState: InputState   "},{"title":"Actions​","type":1,"pageTitle":"Spark","url":"api/Spark#Actions","content":"&lt;/&gt; Spark.Actions: Actions   "},{"title":"InputMap​","type":1,"pageTitle":"Spark","url":"api/Spark#InputMap","content":"&lt;/&gt; Spark.InputMap: InputMap   "},{"title":"Rebind​","type":1,"pageTitle":"Spark","url":"api/Spark#Rebind","content":"&lt;/&gt; Spark.Rebind: Rebind   "},{"title":"Devices​","type":1,"pageTitle":"Spark","url":"api/Spark#Devices","content":"&lt;/&gt; Spark.Devices: Devices   "},{"title":"Composite1d​","type":1,"pageTitle":"Spark","url":"api/Spark#Composite1d","content":"&lt;/&gt; Spark.Composite1d: Composite1d   "},{"title":"Composite2d​","type":1,"pageTitle":"Spark","url":"api/Spark#Composite2d","content":"&lt;/&gt; Spark.Composite2d: Composite2d  "},{"title":"InputMap","type":0,"sectionRef":"#","url":"api/InputMap","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"InputMap","url":"api/InputMap#functions","content":" "},{"title":"new​","type":1,"pageTitle":"InputMap","url":"api/InputMap#new","content":"&lt;/&gt; InputMap.new() → InputMap Creates a new empty InputMap.  "},{"title":"fromSerialized​","type":1,"pageTitle":"InputMap","url":"api/InputMap#fromSerialized","content":"&lt;/&gt; InputMap.fromSerialized( serialized: {}-- Serialized input map returned from InputMap:serialize. ) → InputMap Creates a new InputMap from a serialized input map.  "},{"title":"insert​","type":1,"pageTitle":"InputMap","url":"api/InputMap#insert","content":"&lt;/&gt; InputMap:insert( name: string,-- The name of the action. input: Input-- The input that gets mapped to the action. ) → InputMap-- Returns itself. Inserts a mapping between an action an an input. If the action already has the input, it will be removed and re-inserted at the end of the inputs.  "},{"title":"insertMultiple​","type":1,"pageTitle":"InputMap","url":"api/InputMap#insertMultiple","content":"&lt;/&gt; InputMap:insertMultiple( name: string,-- The name of the action. inputs: {Input}-- The inputs that get mapped to the action. ) → InputMap-- Returns itself. Inserts mappings between an action and the provided inputs.  "},{"title":"get​","type":1,"pageTitle":"InputMap","url":"api/InputMap#get","content":"&lt;/&gt; InputMap:get( name: string-- The name of the action. ) → {Input}-- Returns the action's inputs. Gets the inputs for a given action.  "},{"title":"remove​","type":1,"pageTitle":"InputMap","url":"api/InputMap#remove","content":"&lt;/&gt; InputMap:remove( name: string,-- The name of the action. input: Input-- The input to remove from the action. ) → () Removes an input from an action if the action has that input.  "},{"title":"serialize​","type":1,"pageTitle":"InputMap","url":"api/InputMap#serialize","content":"&lt;/&gt; InputMap:serialize() → {} Returns a serialized version of the input map that can be saved and loaded with InputMap.fromSerialized. "}]